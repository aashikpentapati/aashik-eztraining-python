DAY 6 NOTES
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

EXCEPTION HANDLING 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#EXCEPT

a=100
b=0
try:        #ur telling may hv error,u try
    print(a/b)

#except Exception:#u saying if error there i handle
#print("cant divide any number by zero")


except Exception as e:
    print("please note,number cant be divided by zero",e)
     #this will print error also


#to check your prg execution goes till end or get
print(*"bye")

O/P:
please note,number cant be divided by zero division by zero
b y e
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

#FINALLY

a=100
b=0

try:
    print("resource open")
    print(a/b)


except Exception as e:
    print("dont use second as zero",e)
     
finally:  #will get executed if there is error
    print("resource close")

O/P:

resource open
dont use second as zero division by zero
resource close
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#LIKE SPECIALISED DOCTORS
#FOR THOSE SPECIFIC ERROR ONLY THOSE EXCEPTIONS
#BLOCKS WILL GET EXECUTED

a=10
try:
    b=int(input("enter the number"))
    print("resource open")
    print(a/b)
except ZeroDivisionError as e:
    print("Please note, number cant be divided by zero",e)
except ValueError as e:
    print("invalid input",e)
except Exception as e: #if not any above errors
    print("other error",e)
finally:
    print("resource closed")

O/P:

enter the number34
resource open
0.29411764705882354
resource closed

enter the numberh
invalid input invalid literal for int() with base 10: 'h'
resource closed
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

x=10
if x%2!=0:
    raise Exception("x should be even number")
else:
    print("x is even number..correct")

O/P:

x is even number..correct
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

>>OOPS CONCEPT:

class computer:           #class definition
    def config(self):     #config is a function
        print("yes")


lenova=computer() #object1
lenova.config()

dell=computer() #object2
dell.config()

O/P:


yes
yes
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

#USING CONSTRUSTER

class Employee:
    def __init__(self,name,id):
        self.id=id
        self.name=name

    def display(self):
        print("id: %d \nname: %s" %(self.id,self.name))

emp1=Employee("satya",473)
emp2=Employee("megha",480)

emp1.display()
emp2.display()

O/P:

id: 473 
name: satya
id: 480 
name: megha
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#VARIABLES AND VAR.ACCESS IN CLASS IN CLASS AND METHODS

class computer():
    a=10
    b=20
    print("class variables inside class",a)

    def config(self):  #config is a function
        c=100
        print("yes")
        print("instance access",self.b)

lenova=computer() #object1
print(lenova.a)
print(lenova.a+lenova.b)
dell=computer()   #object2
print("dell",dell.a)
lenova.config()

O/P:
class variables inside class 10
10
30
dell 10
yes
instance access 20
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------









































